// quad_image_info: List of lists [D,N, [quots]] where quots is a list of lists of the form [m, pts1, pts2]. Here,
// m is a value such that X_0^D(N)/w_m has genus 1, and pts1 and pts2 are lists of info for all quadratic points
// on X_0^D(N). The info in pts1 and pts2 are of the form [d_K, f, f_R, n, B] where f^2*d_K is the CM discriminant of the points,
// f_R^2*d_K is the CM discriminant corresponding to the residue fields of the points on 
// X_0^D(N), n is the number of such closed points on X_0^D(N), and B is True if the images of these
// points on X_0^D(N)/w_m are rational and B is False otherwise. The list pts1 contains info for pts
// on X_0^D(N) fixed by an involution of K(f_R), and the list pts2 contains info for pts
// with residue field K(f_R). 

quad_image_info :=  [* [* 6, 5, [* [* 3,
    [],
    [ [* -4, 1, 1, 4, False *], [* -4, 2, 2, 4, False *], [* -19, 1, 1, 8, False
    *] ]
*], [* 5,
    [],
    [ [* -4, 1, 1, 4, False *], [* -4, 2, 2, 4, False *], [* -19, 1, 1, 8, False
    *] ]
*], [* 15,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -19, 1, 1, 8, False 
    *] ]
*] *] *], [* 6, 7, [* [* 2,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 8, False *] ]
*], [* 7,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 8, False *] ]
*], [* 14,
    [],
    [ [* -3, 1, 1, 4, True *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 8, False *] ]
*] *] *], [* 6, 11, [* [* 6,
    [],
    [ [* -19, 1, 1, 8, False *], [* -43, 1, 1, 8, False *] ]
*], [* 22,
    [],
    [ [* -19, 1, 1, 8, False *], [* -43, 1, 1, 8, False *] ]
*], [* 33,
    [],
    [ [* -19, 1, 1, 8, False *], [* -43, 1, 1, 8, False *] ]
*] *] *], [* 6, 13, [* [* 6,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -4, 1, 1, 4, False *], [* -4, 2, 2, 4, False *], [* -43, 1, 1, 8, 
    False *] ]
*], [* 26,
    [],
    [ [* -3, 1, 1, 4, True *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -4, 1, 1, 4, False *], [* -4, 2, 2, 4, False *], [* -43, 1, 1, 8, 
    False *] ]
*], [* 39,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -43, 1, 1, 8, 
    False *] ]
*] *] *], [* 6, 17, [* [* 2,
    [],
    [ [* -4, 1, 1, 4, False *], [* -4, 2, 2, 4, False *], [* -19, 1, 1, 8, False
    *], [* -43, 1, 1, 8, False *], [* -67, 1, 1, 8, False *] ]
*], [* 51,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -19, 1, 1, 8, False 
    *], [* -43, 1, 1, 8, False *], [* -67, 1, 1, 8, False *] ]
*], [* 102,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -19, 1, 1, 8, True 
    *], [* -43, 1, 1, 8, True *], [* -67, 1, 1, 8, True *] ]
*] *] *], [* 6, 19, [* [* 3,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 4, False *], [* -67, 1, 1, 8, False *] ]
*], [* 19,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 4, False *], [* -67, 1, 1, 8, False *] ]
*], [* 57,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 4, False *], [* -67, 1, 1, 8, False *] ]
*] *] *], [* 6, 23, [* [* 46,
    [],
    [ [* -19, 1, 1, 8, False *], [* -43, 1, 1, 8, False *], [* -67, 1, 1, 8, 
    False *] ]
*], [* 69,
    [],
    [ [* -19, 1, 1, 8, False *], [* -43, 1, 1, 8, False *], [* -67, 1, 1, 8, 
    False *] ]
*], [* 138,
    [],
    [ [* -19, 1, 1, 8, True *], [* -43, 1, 1, 8, True *], [* -67, 1, 1, 8, True 
    *] ]
*] *] *], [* 6, 41, [* [* 246,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -43, 1, 1, 8, True 
    *], [* -163, 1, 1, 8, True *] ]
*] *] *], [* 6, 43, [* [* 129,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -19, 1, 1, 8, False *], [* -43, 1, 1, 4, False *], [* -163, 1, 1, 8, 
    False *] ]
*] *] *], [* 6, 47, [* [* 94,
    [],
    [ [* -19, 1, 1, 8, False *], [* -43, 1, 1, 8, False *], [* -67, 1, 1, 8, 
    False *], [* -163, 1, 1, 8, False *] ]
*] *] *], [* 6, 71, [* [* 426,
    [],
    [ [* -67, 1, 1, 8, True *], [* -163, 1, 1, 8, True *] ]
*] *] *], [* 10, 3, [* [* 6,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -8, 1, 1, 4, False *] ]
*], [* 10,
    [],
    [ [* -3, 1, 1, 4, True *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -8, 1, 1, 4, False *] ]
*], [* 15,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -8, 1, 1, 4, True *] ]
*] *] *], [* 10, 7, [* [* 2,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *] ]
*], [* 7,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *] ]
*], [* 14,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *] ]
*] *] *], [* 10, 13, [* [* 10,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *], [* -43, 1, 1, 8, False *] ]
*], [* 13,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *], [* -43, 1, 1, 8, False *] ]
*], [* 130,
    [],
    [ [* -3, 1, 1, 8, True *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *], [* -43, 1, 1, 8, True *] ]
*] *] *], [* 10, 17, [* [* 170,
    [],
    [ [* -8, 1, 1, 4, True *], [* -43, 1, 1, 8, True *], [* -67, 1, 1, 8, True 
    *] ]
*] *] *], [* 10, 29, [* [* 290,
    [],
    [ [* -67, 1, 1, 8, True *] ]
*] *] *], [* 10, 31, [* [* 62,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *], [* -43, 1, 1, 8, False *] ]
*] *] *], [* 14, 3, [* [* 2,
    [],
    [ [* -8, 1, 1, 4, False *], [* -11, 1, 1, 8, False *] ]
*], [* 21,
    [],
    [ [* -8, 1, 1, 4, True *], [* -11, 1, 1, 8, False *] ]
*], [* 42,
    [],
    [ [* -8, 1, 1, 4, True *], [* -11, 1, 1, 8, True *] ]
*] *] *], [* 14, 5, [* [* 2,
    [],
    [ [* -4, 1, 1, 4, False *], [* -4, 2, 2, 4, False *], [* -11, 1, 1, 8, False
    *] ]
*], [* 35,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -11, 1, 1, 8, False 
    *] ]
*], [* 70,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -11, 1, 1, 8, True 
    *] ]
*] *] *], [* 14, 13, [* [* 182,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -43, 1, 1, 8, True 
    *] ]
*] *] *], [* 14, 19, [* [* 266,
    [],
    [ [* -8, 1, 1, 4, True *], [* -67, 1, 1, 8, True *] ]
*] *] *], [* 15, 2, [* [* 10,
    [],
    [ [* -3, 1, 2, 2, False *], [* -3, 2, 2, 2, False *], [* -7, 1, 1, 8, False 
    *], [* -7, 1, 2, 4, False *], [* -7, 2, 2, 4, False *] ]
*], [* 30,
    [],
    [ [* -3, 1, 2, 2, False *], [* -3, 2, 2, 2, False *], [* -7, 1, 1, 8, True 
    *], [* -7, 1, 2, 4, True *], [* -7, 2, 2, 4, True *] ]
*] *] *], [* 15, 7, [* [* 3,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -7, 1, 1, 4, False *], [* -7, 2, 2, 4, False *] ]
*], [* 7,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -7, 1, 1, 4, False *], [* -7, 2, 2, 4, False *] ]
*], [* 105,
    [],
    [ [* -3, 1, 1, 4, True *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -7, 1, 1, 4, True *], [* -7, 2, 2, 4, True *] ]
*] *] *], [* 15, 11, [* [* 55,
    [],
    [ [* -7, 1, 1, 8, False *], [* -7, 2, 2, 8, False *], [* -43, 1, 1, 8, False
    *] ]
*] *] *], [* 15, 13, [* [* 195,
    [],
    [ [* -3, 1, 1, 4, True *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *], [* -43, 1, 1, 8, True *] ]
*] *] *], [* 15, 17, [* [* 255,
    [],
    [ [* -43, 1, 1, 8, True *], [* -67, 1, 1, 8, True *] ]
*] *] *], [* 21, 2, [* [* 2,
    [],
    [ [* -4, 1, 1, 4, False *], [* -4, 1, 2, 4, False *], [* -4, 2, 2, 4, False 
    *], [* -7, 1, 1, 4, False *], [* -7, 1, 2, 2, False *], [* -7, 2, 2, 2, 
    False *] ]
*], [* 21,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 1, 2, 4, False *], [* -4, 2, 2, 4, False 
    *], [* -7, 1, 1, 4, False *], [* -7, 1, 2, 2, True *], [* -7, 2, 2, 2, True 
    *] ]
*], [* 42,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 1, 2, 4, False *], [* -4, 2, 2, 4, False 
    *], [* -7, 1, 1, 4, True *], [* -7, 1, 2, 2, True *], [* -7, 2, 2, 2, True 
    *] ]
*] *] *], [* 21, 5, [* [* 15,
    [],
    [ [* -4, 1, 1, 8, False *], [* -4, 2, 2, 8, False *] ]
*], [* 21,
    [],
    [ [* -4, 1, 1, 8, False *], [* -4, 2, 2, 8, False *] ]
*], [* 105,
    [],
    [ [* -4, 1, 1, 8, True *], [* -4, 2, 2, 8, False *] ]
*] *] *], [* 21, 11, [* [* 231,
    [],
    [ [* -7, 1, 1, 4, True *], [* -7, 2, 2, 4, True *], [* -43, 1, 1, 8, True *]
    ]
*] *] *], [* 22, 3, [* [* 3,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -11, 1, 1, 4, False *] ]
*], [* 11,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -11, 1, 1, 4, False *] ]
*], [* 33,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -11, 1, 1, 4, False *] ]
*] *] *], [* 22, 7, [* [* 14,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *] ]
*], [* 77,
    [],
    [ [* -3, 1, 1, 8, False *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *] ]
*], [* 154,
    [],
    [ [* -3, 1, 1, 8, True *], [* -3, 2, 2, 8, False *], [* -3, 3, 3, 8, False 
    *] ]
*] *] *], [* 22, 17, [* [* 374,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *], [* -67, 1, 1, 8, True 
    *] ]
*] *] *], [* 26, 5, [* [* 26,
    [],
    [ [* -11, 1, 1, 8, False *], [* -19, 1, 1, 8, False *] ]
*] *] *], [* 33, 2, [* [* 66,
    [],
    [ [* -3, 1, 2, 2, False *], [* -3, 2, 2, 2, False *], [* -4, 1, 1, 4, True 
    *], [* -4, 1, 2, 4, False *], [* -4, 2, 2, 4, False *] ]
*] *] *], [* 33, 5, [* [* 55,
    [],
    [ [* -4, 1, 1, 8, False *], [* -4, 2, 2, 8, False *] ]
*] *] *], [* 33, 7, [* [* 231,
    [],
    [ [* -3, 1, 1, 4, True *], [* -3, 2, 2, 4, False *], [* -3, 3, 3, 4, False 
    *] ]
*] *] *], [* 34, 3, [* [* 17,
    [],
    [ [* -3, 1, 1, 4, False *], [* -3, 1, 3, 4, False *], [* -3, 2, 2, 4, False 
    *], [* -3, 3, 3, 4, False *], [* -11, 1, 1, 8, False *] ]
*] *] *], [* 35, 2, [* [* 35,
    [],
    [ [* -7, 1, 1, 4, False *], [* -7, 1, 2, 2, True *], [* -7, 2, 2, 2, True 
    *], [* -8, 1, 1, 4, True *] ]
*] *] *], [* 35, 3, [* [* 35,
    [],
    [ [* -8, 1, 1, 8, False *] ]
*] *] *], [* 38, 3, [* [* 38,
    [],
    [ [* -11, 1, 1, 8, False *] ]
*] *] *], [* 46, 5, [* [* 230,
    [],
    [ [* -4, 1, 1, 4, True *], [* -4, 2, 2, 4, False *] ]
*] *] *] *];



// List of lists [D,N, m_list] where m_list is list of m values such that X_0^D(N)/w_m is genus 1
// with a rational point

rational_CM_pts_info :=  [* [* 6, 5,
    [ 15 ]
*], [* 6, 7,
    [ 14 ]
*], [* 6, 11,
    []
*], [* 6, 13,
    [ 26, 39 ]
*], [* 6, 17,
    [ 51, 102 ]
*], [* 6, 19,
    []
*], [* 6, 23,
    [ 138 ]
*], [* 6, 41,
    [ 246 ]
*], [* 6, 43,
    []
*], [* 6, 47,
    []
*], [* 6, 71,
    [ 426 ]
*], [* 10, 3,
    [ 10, 15 ]
*], [* 10, 7,
    []
*], [* 10, 13,
    [ 130 ]
*], [* 10, 17,
    [ 170 ]
*], [* 10, 29,
    [ 290 ]
*], [* 10, 31,
    []
*], [* 14, 3,
    [ 21, 42 ]
*], [* 14, 5,
    [ 35, 70 ]
*], [* 14, 13,
    [ 182 ]
*], [* 14, 19,
    [ 266 ]
*], [* 15, 2,
    [ 30 ]
*], [* 15, 7,
    [ 105 ]
*], [* 15, 11,
    []
*], [* 15, 13,
    [ 195 ]
*], [* 15, 17,
    [ 255 ]
*], [* 21, 2,
    [ 21, 42 ]
*], [* 21, 5,
    [ 105 ]
*], [* 21, 11,
    [ 231 ]
*], [* 22, 3,
    []
*], [* 22, 7,
    [ 154 ]
*], [* 22, 17,
    [ 374 ]
*], [* 26, 5,
    []
*], [* 33, 2,
    [ 66 ]
*], [* 33, 5,
    []
*], [* 33, 7,
    [ 231 ]
*], [* 34, 3,
    []
*], [* 35, 2,
    [ 35 ]
*], [* 35, 3,
    []
*], [* 38, 3,
    []
*], [* 46, 5,
    [ 230 ]
*] *];
